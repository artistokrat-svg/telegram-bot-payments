import os
import sqlite3
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.utils import executor

TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –•—ç–Ω–¥–ª–µ—Ä /start
async def start(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ")

# –•—ç–Ω–¥–ª–µ—Ä /all
async def all_payments(message: Message):
    conn = sqlite3.connect('payments.db')
    cursor = conn.cursor()
    cursor.execute("SELECT username, amount, description, date FROM payments ORDER BY date DESC LIMIT 20")
    records = cursor.fetchall()
    conn.close()

    if not records:
        await message.reply("–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π üí∏")
        return

    total_sum = sum([r[1] for r in records])
    text = "üìä *–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è:*\n\n"
    for username, amount, description, date in records:
        text += f"üë§ {username or '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} ‚Äî {amount} ‚ÇΩ ‚Äî {description or '–±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'} ‚Äî {date}\n"
    text += f"\nüí∞ *–ò—Ç–æ–≥–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:* {total_sum} ‚ÇΩ"
    await message.reply(text, parse_mode="Markdown")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö—ç–Ω–¥–ª–µ—Ä—ã —á–µ—Ä–µ–∑ dp.message.register
dp.message.register(start, commands=["start"])
dp.message.register(all_payments, commands=["all"])

if __name__ == "__main__":
    executor.start_polling(dp, bot)
