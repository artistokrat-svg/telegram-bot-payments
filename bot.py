import os
import sqlite3
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command

TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=TOKEN)
dp = Dispatcher()

# /start
async def start(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ")

# /all
async def all_payments(message: Message):
    conn = sqlite3.connect("payments.db")
    cursor = conn.cursor()
    cursor.execute(
        "SELECT username, amount, description, date FROM payments ORDER BY date DESC LIMIT 20"
    )
    records = cursor.fetchall()
    conn.close()

    if not records:
        await message.reply("–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π üí∏")
        return

    total_sum = sum([r[1] for r in records])
    text = "üìä *–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è:*\n\n"
    for username, amount, description, date in records:
        text += f"üë§ {username or '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} ‚Äî {amount} ‚ÇΩ ‚Äî {description or '–±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'} ‚Äî {date}\n"
    text += f"\nüí∞ *–ò—Ç–æ–≥–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:* {total_sum} ‚ÇΩ"
    await message.reply(text, parse_mode="Markdown")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö—ç–Ω–¥–ª–µ—Ä—ã —á–µ—Ä–µ–∑ —Ñ–∏–ª—å—Ç—Ä—ã Command
dp.message.register(start, Command(commands=["start"]))
dp.message.register(all_payments, Command(commands=["all"]))

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ asyncio
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
